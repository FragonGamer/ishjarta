name: Ishjarta üéÆ

on:
  push:
    branches:
      - main

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ishjarta
        testMode:
          - playmode
          - editmode
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}


  buildAndDeployDoxygen:
    needs: testAllModes
    name: Build and Deploy Doxygen ‚ú®
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: "true"

    - name: Install Doxygen
      run: sudo apt-get install doxygen graphviz -y
      shell: bash

    - name: Generate Doxygen Documentation
      run: doxygen .github/workflows/DoxyFile
      shell: bash

    - name: Deploy üì±
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: publish
        folder: build/docu/html
        target-folder: docu



  buildAndDeployWebGL:
    needs: testAllModes
    name: Build and Deploy WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ishjarta
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          projectPath: ${{ matrix.projectPath }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
      - uses: actions/upload-artifact@v2
        with:
          name: upload-WebGL
          path: build/game
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: publish
          folder: build/game/WebGL
          target-folder: game

     
